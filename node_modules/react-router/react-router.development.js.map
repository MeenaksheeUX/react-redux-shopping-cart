{"version":3,"file":"react-router.development.js","sources":["../../packages/react-router/modules/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMemoryHistory, parsePath } from 'history';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\nconst LocationContext = React.createContext({\n  history: null,\n  location: { pathname: '/', search: '', hash: '' },\n  pending: false\n});\n\nif (__DEV__) {\n  LocationContext.Consumer.displayName = 'Location.Consumer';\n  LocationContext.Provider.displayName = 'Location.Provider';\n}\n\nconst RouteContext = React.createContext({\n  outlet: null,\n  params: readOnly({}),\n  pathname: '',\n  route: null\n});\n\nif (__DEV__) {\n  RouteContext.Consumer.displayName = 'Route.Consumer';\n  RouteContext.Provider.displayName = 'Route.Provider';\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n */\nexport function MemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  timeout\n}) {\n  let historyRef = React.useRef(null);\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  return (\n    <Router\n      children={children}\n      history={historyRef.current}\n      timeout={timeout}\n    />\n  );\n}\n\nif (__DEV__) {\n  MemoryRouter.displayName = 'MemoryRouter';\n  MemoryRouter.propTypes = {\n    children: PropTypes.node,\n    timeout: PropTypes.number,\n    initialEntries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          pathname: PropTypes.string,\n          search: PropTypes.string,\n          hash: PropTypes.string,\n          state: PropTypes.object,\n          key: PropTypes.string\n        })\n      ])\n    ),\n    initialIndex: PropTypes.number\n  };\n}\n\n/**\n * Navigate programmatically using a component.\n */\nexport function Navigate({ to, replace = false, state }) {\n  let navigate = useNavigate();\n  navigate(to, { replace, state });\n  return null;\n}\n\nif (__DEV__) {\n  Navigate.displayName = 'Navigate';\n  Navigate.propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ]).isRequired,\n    replace: PropTypes.bool,\n    state: PropTypes.object\n  };\n}\n\n/**\n * Renders the child route's element, if there is one.\n */\nexport function Outlet() {\n  return useOutlet();\n}\n\nif (__DEV__) {\n  Outlet.displayName = 'Outlet';\n  Outlet.propTypes = {};\n}\n\n/**\n * Used in a route config to redirect from one location to another.\n */\nexport function Redirect() {\n  return null;\n}\n\nif (__DEV__) {\n  Redirect.displayName = 'Redirect';\n\n  function redirectChildrenType(props, propName, componentName) {\n    if (props[propName] != null) {\n      return new Error(\n        'A <Redirect> should not have child routes; they will never be rendered.'\n      );\n    }\n  }\n\n  Redirect.propTypes = {\n    children: redirectChildrenType,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ])\n  };\n}\n\n/**\n * Used in a route config to render an element.\n */\nexport function Route({ element }) {\n  return element;\n}\n\nif (__DEV__) {\n  Route.displayName = 'Route';\n  Route.propTypes = {\n    children: PropTypes.node,\n    element: PropTypes.element,\n    path: PropTypes.string\n  };\n}\n\n// TODO: Remove once React.useTransition is stable.\nconst startTransition = tx => tx();\nconst useTransition = React.useTransition || (() => [startTransition, false]);\n\n/**\n * The root context provider. There should be only one of these in a given app.\n */\nexport function Router({ children = null, history, timeout = 2000 }) {\n  let [location, setLocation] = React.useState(history.location);\n  let [startTransition, pending] = useTransition({ timeoutMs: timeout });\n  let listeningRef = React.useRef(false);\n\n  invariant(\n    !React.useContext(LocationContext).history,\n    `You rendered a <Router> inside another <Router>` +\n      ` but you should only ever render one in a given app.`\n  );\n\n  if (!listeningRef.current) {\n    listeningRef.current = true;\n    history.listen(({ location }) => {\n      startTransition(() => {\n        setLocation(location);\n      });\n    });\n  }\n\n  return (\n    <LocationContext.Provider\n      children={children}\n      value={{ history, location, pending }}\n    />\n  );\n}\n\nif (__DEV__) {\n  Router.displayName = 'Router';\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.shape({\n      action: PropTypes.string,\n      location: PropTypes.object,\n      push: PropTypes.func,\n      replace: PropTypes.func,\n      go: PropTypes.func,\n      listen: PropTypes.func,\n      block: PropTypes.func\n    }),\n    timeout: PropTypes.number\n  };\n}\n\n/**\n * A replacement for React Router v4/5's <Switch> that follows the new \"routes\"\n * semantics. Unlike <Switch> however, <Routes> matches its children <Route>s\n * recursively. Also a replacement for @reach/router's <Router>.\n */\nexport function Routes({ basename = '', caseSensitive = false, children }) {\n  let { pathname: parentPathname, route: parentRoute } = React.useContext(\n    RouteContext\n  );\n  let parentPath = parentRoute && parentRoute.path;\n\n  warning(\n    !parentRoute || parentRoute.path.endsWith('*'),\n    `You rendered <Routes> at \"${parentPathname}\" (under route path \"${parentPath}\")` +\n      ` but the route path has no trailing \"*\", so the child routes won't be able to match` +\n      ` any part of the URL. You should use route path \"${parentPath}/*\" instead.`\n  );\n\n  let routes = createRoutesFromChildren(children);\n\n  return useRoutes(routes, basename, caseSensitive);\n}\n\nif (__DEV__) {\n  Routes.displayName = 'Routes';\n  Routes.propTypes = {\n    basename: PropTypes.string,\n    caseSensitive: PropTypes.bool,\n    children: PropTypes.node\n  };\n}\n\n/**\n * Utility function that creates a routes config object from a React\n * \"children\" object, which is usually either a React element or an\n * array of elements.\n */\nexport function createRoutesFromChildren(children) {\n  let routes = [];\n\n  React.Children.forEach(children, element => {\n    // Ignore non-elements. This allows people to more\n    // easily inline conditionals in their route config.\n    if (!React.isValidElement(element)) return;\n\n    let { children, from, path, to } = element.props;\n\n    // Transparently support React.Fragment and its children.\n    if (element.type === React.Fragment) {\n      routes.push.apply(routes, createRoutesFromChildren(children));\n      return;\n    }\n\n    path = path || from || '/';\n\n    // Components that have a to prop are redirects.\n    // All others should use path + element (and maybe children) props.\n    let route;\n    if (to) {\n      route = { path, redirectTo: to };\n    } else {\n      route = { path, element };\n\n      let childRoutes = createRoutesFromChildren(children);\n      if (childRoutes.length) {\n        route.children = childRoutes;\n      }\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Blocks all navigation attempts. This is useful for preventing the page from\n * changing until some condition is met, like saving form data.\n */\nexport function useBlocker(blocker, when = true) {\n  let { history } = React.useContext(LocationContext);\n\n  invariant(\n    history != null,\n    'navigation blocking may be used only in the context of a <Router> component'\n  );\n\n  React.useEffect(() => {\n    if (when) {\n      let unblock = history.block(tx => {\n        let autoUnblockingTx = {\n          ...tx,\n          retry() {\n            // Automatically unblock the transition so it can\n            // play all the way through before retrying it.\n            // TODO: Figure out how to re-enable this block if the\n            // transition is cancelled for some reason.\n            unblock();\n            tx.retry();\n          }\n        };\n\n        blocker(autoUnblockingTx);\n      });\n\n      return unblock;\n    }\n  }, [history, when, blocker]);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n */\nexport function useHref(to) {\n  let resolvedLocation = useResolvedLocation(to);\n  let { history } = React.useContext(LocationContext);\n\n  invariant(\n    history != null,\n    'href resolution may be used only in the context of a <Router> component'\n  );\n\n  return history.createHref(resolvedLocation);\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * NOTE: If you're using this it may mean you're doing some of your own \"routing\"\n * in your app, and we'd like to know what your use case is. We may be able to\n * provide something higher-level to better suit your needs.\n */\nexport function useLocation() {\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n */\nexport function useMatch(to) {\n  let location = useLocation();\n  let resolvedLocation = useResolvedLocation(to);\n  // TODO: Try to match search + hash as well\n  return location.pathname === resolvedLocation.pathname;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n */\nexport function useNavigate() {\n  let { history, pending } = React.useContext(LocationContext);\n  let { pathname } = React.useContext(RouteContext);\n\n  invariant(\n    history != null,\n    'navigation may be used only in the context of a <Router> component'\n  );\n\n  let navigate = React.useCallback(\n    (to, { replace, state } = {}) => {\n      if (typeof to === 'number') {\n        history.go(to);\n      } else {\n        let relativeTo = resolveLocation(to, pathname);\n\n        // If we are pending transition, use REPLACE instead of PUSH.\n        // This will prevent URLs that we started navigating to but\n        // never fully loaded from appearing in the history stack.\n        let method = !!replace || pending ? 'replace' : 'push';\n        history[method](relativeTo, state);\n      }\n    },\n    [history, pending, pathname]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the outlet element at this level of the route hierarchy. Used to\n * render child routes.\n */\nexport function useOutlet() {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns a hash of the dynamic params that were matched in the route path.\n * This is useful for using ids embedded in the URL to fetch data, but we\n * eventually want to provide something at a higher level for this.\n */\nexport function useParams() {\n  return React.useContext(RouteContext).params;\n}\n\n/**\n * Returns a fully-resolved location object relative to the current location.\n */\nexport function useResolvedLocation(to) {\n  let { pathname } = React.useContext(RouteContext);\n  return React.useMemo(() => resolveLocation(to, pathname), [to, pathname]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * Route objects may take one of 2 forms:\n *\n * - { path, element, children }\n * - { path, redirectTo }\n *\n * We should probably write this up in TypeScript instead of in a comment. In\n * fact, what am I even doing here. Nobody is ever going to read this.\n */\nexport function useRoutes(routes, basename = '', caseSensitive = false) {\n  let location = useLocation();\n  let navigate = useNavigate();\n  let { params: parentParams, pathname: parentPathname } = React.useContext(\n    RouteContext\n  );\n\n  basename = basename ? joinPaths([parentPathname, basename]) : parentPathname;\n\n  let matches = React.useMemo(\n    () => matchRoutes(routes, location, basename, caseSensitive),\n    [routes, location, basename, caseSensitive]\n  );\n\n  if (!matches) {\n    // TODO: Warn about nothing matching, suggest using a catch-all route.\n    return null;\n  }\n\n  // If we matched a redirect, navigate and return null.\n  let redirectMatch = matches.find(match => isRedirectRoute(match.route));\n  if (redirectMatch) {\n    let { params, route } = redirectMatch;\n    let relativeTo = resolveLocation(route.redirectTo, parentPathname);\n\n    let { pathname } = relativeTo;\n    if (/:\\w+/.test(pathname)) {\n      // Allow param interpolation into <Redirect to>, e.g.\n      // <Redirect from=\"users/:id\" to=\"profile/:id\">\n      relativeTo = { ...relativeTo, pathname: generatePath(pathname, params) };\n    }\n\n    navigate(relativeTo, { replace: true });\n\n    return null;\n  }\n\n  // TODO: Initiate preload sequence here.\n\n  // Otherwise render an element.\n  let element = matches.reduceRight((outlet, { params, pathname, route }) => {\n    return (\n      <RouteContext.Provider\n        children={route.element}\n        value={{\n          outlet,\n          params: readOnly({ ...parentParams, ...params }),\n          pathname: joinPaths([basename, pathname]),\n          route\n        }}\n      />\n    );\n  }, null);\n\n  return element;\n}\n\nfunction isRedirectRoute(route) {\n  return route.redirectTo != null;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Matches the given routes to a location and returns the match data.\n */\nexport function matchRoutes(\n  routes,\n  location,\n  basename = '',\n  caseSensitive = false\n) {\n  if (typeof location === 'string') {\n    location = parsePath(location);\n  }\n\n  // TODO: Validate location\n  // - it should have a pathname\n  let base = basename.replace(/^\\/+|\\/+$/g, '');\n  let target = location.pathname.slice(1);\n\n  if (base) {\n    if (base === target) {\n      target = '';\n    } else if (target.startsWith(base)) {\n      target = target.slice(base.length).replace(/^\\/+/, '');\n    } else {\n      return null;\n    }\n  }\n\n  let flattenedRoutes = flattenRoutes(routes);\n\n  // TODO: Validate the routes config\n  // - routes should all have paths and elements\n  // - redirects should have a redirectTo\n  // - redirects should not have children\n  // - warn about unreachable routes\n\n  rankFlattenedRoutes(flattenedRoutes);\n\n  for (let i = 0; i < flattenedRoutes.length; ++i) {\n    let [path, flatRoutes] = flattenedRoutes[i];\n\n    // TODO: Match on search, state too\n    let [matcher] = compilePath(path, /* end */ true, caseSensitive);\n\n    if (matcher.test(target)) {\n      return flatRoutes.map((route, index) => {\n        let routes = flatRoutes.slice(0, index + 1);\n        let path = joinPaths(routes.map(r => r.path));\n        let [matcher, keys] = compilePath(path, /* end */ false, caseSensitive);\n        let match = target.match(matcher);\n\n        return {\n          params: createParams(keys, match.slice(2)),\n          pathname: '/' + match[1],\n          route\n        };\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction flattenRoutes(\n  routes,\n  flattenedRoutes = [],\n  parentPath = '',\n  parentRoutes = [],\n  parentIndexes = []\n) {\n  routes.forEach((route, index) => {\n    let path = joinPaths([parentPath, route.path]);\n    let routes = parentRoutes.concat(route);\n    let indexes = parentIndexes.concat(index);\n\n    flattenedRoutes.push([path, routes, indexes]);\n\n    if (route.children) {\n      flattenRoutes(route.children, flattenedRoutes, path, routes, indexes);\n    }\n  });\n\n  return flattenedRoutes;\n}\n\nconst paramRe = /^:\\w+$/;\n\nfunction computeScore(path) {\n  return path\n    .split('/')\n    .reduce(\n      (score, segment) =>\n        score + (paramRe.test(segment) ? 2 : segment === '*' ? -1 : 10),\n      0\n    );\n}\n\nfunction rankFlattenedRoutes(flattenedRoutes) {\n  let pathScores = flattenedRoutes.reduce((memo, [path]) => {\n    memo[path] = computeScore(path);\n    return memo;\n  }, {});\n\n  flattenedRoutes.sort((a, b) => {\n    let [aPath, , aIndexes] = a;\n    let aScore = pathScores[aPath];\n\n    let [bPath, , bIndexes] = b;\n    let bScore = pathScores[bPath];\n\n    return aScore !== bScore\n      ? bScore - aScore // Higher score first\n      : compareIndexes(aIndexes, bIndexes);\n  });\n}\n\nfunction compareIndexes(a, b) {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? a[a.length - 1] - b[b.length - 1] // Earlier siblings come first\n    : 0; // It doesn't make sense to rank non-siblings by index, so they sort equal\n}\n\nfunction compilePath(path, end, caseSensitive) {\n  let keys = [];\n  let pattern =\n    '^(' +\n    path\n      .replace(/^\\/+/, '') // Ignore leading /\n      .replace(/\\*\\//, '') // Ignore */\n      .replace(/\\/?\\*?$/, '') // Ignore trailing /*, we'll handle it below\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_, key) => {\n        keys.push(key);\n        return '([^\\\\/]+)';\n      }) +\n    ')';\n\n  if (path.endsWith('*')) {\n    if (path.endsWith('/*')) {\n      // Don't include the / in params['*']\n      pattern += '\\\\/?';\n    }\n    keys.push('*');\n    pattern += '(.*)';\n  } else if (end) {\n    pattern += '\\\\/?';\n  }\n\n  if (end) pattern += '$';\n\n  let flags = caseSensitive ? undefined : 'i';\n  let matcher = new RegExp(pattern, flags);\n\n  return [matcher, keys];\n}\n\nfunction createParams(keys, values) {\n  return keys.reduce((params, key, index) => {\n    // TODO: Use decodeURIComponent here to decode values?\n    params[key] = values[index];\n    return params;\n  }, {});\n}\n\nconst trimTrailingSlashes = path => path.replace(/\\/+$/, '');\nconst normalizeSlashes = path => path.replace(/\\/\\/+/g, '/');\nconst joinPaths = paths => normalizeSlashes(paths.join('/'));\nconst splitPath = path => normalizeSlashes(path).split('/');\n\nfunction resolvePathname(toPathname, fromPathname) {\n  let segments = splitPath(trimTrailingSlashes(fromPathname));\n  let relativeSegments = splitPath(toPathname);\n\n  relativeSegments.forEach(segment => {\n    if (segment === '..') {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== '.') {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? joinPaths(segments) : '/';\n}\n\n/**\n * Returns a fully resolve location object relative to the given pathname.\n */\nexport function resolveLocation(to, fromPathname = '/') {\n  let { pathname: toPathname, search = '', hash = '' } =\n    typeof to === 'string' ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith('/')\n      ? resolvePathname(toPathname, '/')\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return { pathname, search, hash };\n}\n\n/**\n * Creates a path with params interpolated.\n */\nexport function generatePath(pathname, params = {}) {\n  return pathname\n    .replace(/:(\\w+)/g, (_, key) => params[key] || `:${key}`)\n    .replace(/\\*$/, splat => params[splat] || splat);\n}\n"],"names":["invariant","cond","message","Error","history","location","pathname","search","hash","pending","LocationContext","outlet","params","obj","route","RouteContext","MemoryRouter","children","initialEntries","initialIndex","timeout","historyRef","React","createMemoryHistory","createElement","Router","PropTypes","state","key","Navigate","to","replace","useNavigate","navigate","Outlet","useOutlet","Redirect","props","propName","from","Route","element","path","setLocation","startTransition","useTransition","timeoutMs","listeningRef","Provider","value","action","push","go","listen","block","Routes","basename","caseSensitive","parentPathname","parentRoute","parentPath","console","e","routes","createRoutesFromChildren","useRoutes","redirectTo","childRoutes","useLocation","relativeTo","resolveLocation","method","useResolvedLocation","parentParams","paths","matches","matchRoutes","redirectMatch","match","test","generatePath","parsePath","base","target","flattenedRoutes","flattenRoutes","rankFlattenedRoutes","i","flatRoutes","matcher","compilePath","index","r","keys","createParams","parentRoutes","parentIndexes","indexes","computeScore","score","segment","paramRe","pathScores","memo","a","b","aPath","aIndexes","aScore","bPath","bIndexes","bScore","compareIndexes","siblings","n","end","pattern","_","RegExp","undefined","values","resolvePathname","toPathname","fromPathname","segments","relativeSegments","splat","useBlocker","blocker","when","unblock","tx","autoUnblockingTx","retry","useHref","resolvedLocation","useMatch","useParams"],"mappings":"aAMAA,QAASA,EAAT,CAAmBC,CAAnB,CAAyBC,CAAzB,CAAkC,IAC5B,CAACD,EAAM,KAAUE,MAAJ,CAAUD,CAAV,CAAN,CADqB,CAoBlC,2BACEE,QAAS,KACTC,SAAU,CAAEC,SAAU,GAAZ,CAAiBC,OAAQ,EAAzB,CAA6BC,KAAM,EAAnC,EACVC,QAAS,CAAA,GAITC,EAAAA,SAAAA,YAAAA,CAAuC,mBACvCA,EAAAA,SAAAA,YAAAA,CAAuC,mBAGzC,4BACEC,OAAQ,KACRC,qBAAiBC,IACjBP,SAAU,GACVQ,MAAO,MAIPC,EAAAA,SAAAA,YAAAA,CAAoC,gBACpCA,EAAAA,SAAAA,YAAAA,CAAoC,gBAUtCC;QAAgBA,EAAT,CAAsB,CAAtB,CAKJ,KAL0B,CAC3BC,SAAAA,CAD2B,CAE3BC,eAAAA,CAF2B,CAG3BC,aAAAA,CAH2B,CAI3BC,QAAAA,CAJ2B,CAK1B,EACGC,EAAAA,CAAaC,KAAAA,OAAAA,CAAa,IAAbA,CAES,OAAtBD,CAAAA,WACFA,CAAAA,SAAqBE,mBAAAA,CAAoB,CAAEL,eAAAA,CAAF,CAAkBC,aAAAA,CAAlB,CAApBI,SAIrBD,MAAAE,cAAA,CAACC,CAAD,EACER,SAAUA,EACVb,QAASiB,CAAAA,SACTD,QAASA,EAHX,CARD,CAiBDJ,CAAAA,YAAAA,CAA2B,cAC3BA;CAAAA,UAAAA,CAAyB,CACvBC,SAAUS,SAAAA,KADa,CAEvBN,QAASM,SAAAA,OAFc,CAGvBR,eAAgBQ,SAAAA,QAAAA,CACdA,SAAAA,UAAAA,CAAoB,CAClBA,SAAAA,OADkB,CAElBA,SAAAA,MAAAA,CAAgB,CACdpB,SAAUoB,SAAAA,OADI,CAEdnB,OAAQmB,SAAAA,OAFM,CAGdlB,KAAMkB,SAAAA,OAHQ,CAIdC,MAAOD,SAAAA,OAJO,CAKdE,IAAKF,SAAAA,OALS,CAAhBA,CAFkB,CAApBA,CADcA,CAHO,CAevBP,aAAcO,SAAAA,OAfS,CAsB3BG,SAAgBA,EAAT,CAAkB,CAAlB,CAAkD,KAAhC,CAAEC,GAAAA,CAAF,CAAMC,QAAAA,CAAAA,CAAU,CAAA,CAAhB,CAAuBJ,MAAAA,CAAvB,CAAgC,EACxCK,EAAAA,EACfC,CAASH,CAATG,CAAa,CAAEF,QAAAA,CAAF,CAAWJ,MAAAA,CAAX,CAAbM,QACO,KAHgD,CAOvDJ,CAAAA,YAAAA,CAAuB,UACvBA;CAAAA,UAAAA,CAAqB,CACnBC,GAAIJ,SAAAA,UAAAA,CAAoB,CACtBA,SAAAA,OADsB,CAEtBA,SAAAA,MAAAA,CAAgB,CACdpB,SAAUoB,SAAAA,OADI,CAEdnB,OAAQmB,SAAAA,OAFM,CAGdlB,KAAMkB,SAAAA,OAHQ,CAAhBA,CAFsB,CAApBA,CAAAA,WADe,CASnBK,QAASL,SAAAA,KATU,CAUnBC,MAAOD,SAAAA,OAVY,CAiBvBQ,SAAgBA,EAAT,EAAkB,OAChBC,EAAAA,EADgB,CAKvBD,CAAAA,YAAAA,CAAqB,QACrBA,EAAAA,UAAAA,CAAmB,EAMrBE,SAAgBA,EAAT,EAAoB,OAClB,KADkB,CAKzBA,CAAAA,YAAAA,CAAuB,UAUvBA;CAAAA,UAAAA,CAAqB,CACnBnB,iBATF,CAA8BoB,CAA9B,CAAqCC,CAArC,CAA8D,IACrC,MAAnBD,CAAAA,CAAMC,CAAND,QACSlC,MAAJ,CACL,yEADK,CAFmD,CAQzC,CAEnBoC,KAAMb,SAAAA,OAFa,CAGnBI,GAAIJ,SAAAA,UAAAA,CAAoB,CACtBA,SAAAA,OADsB,CAEtBA,SAAAA,MAAAA,CAAgB,CACdpB,SAAUoB,SAAAA,OADI,CAEdnB,OAAQmB,SAAAA,OAFM,CAGdlB,KAAMkB,SAAAA,OAHQ,CAAhBA,CAFsB,CAApBA,CAHe,CAiBvBc,SAAgBA,EAAT,CAAe,CAAf,CAA4B,EAAb,CAAEC,QAAAA,CAAF,CAAa,UAC1BA,EAD0B,CAKjCD,CAAAA,YAAAA,CAAoB,OACpBA,EAAAA,UAAAA,CAAkB,CAChBvB,SAAUS,SAAAA,KADM,CAEhBe,QAASf,SAAAA,QAFO,CAGhBgB,KAAMhB,SAAAA,OAHU,CAQpB,aAAA,gCACoD,CAAA,GAKpDD;QAAgBA,EAAT,CAAgB,CAAhB,CAA8D,KAA9C,CAAER,SAAAA,CAAAA,CAAW,IAAb,CAAmBb,QAAAA,CAAnB,CAA4BgB,QAAAA,CAAAA,CAAU,GAAtC,CAA8C,OAC/D,CAACf,CAAD,CAAWsC,CAAX,CAAA,CAA0BrB,KAAAA,SAAAA,CAAelB,CAAAA,SAAfkB,EAC1B,CAACsB,CAAD,CAAkBnC,CAAlB,CAAA,CAA6BoC,CAAAA,CAAc,CAAEC,UAAW1B,CAAb,CAAdyB,CAC7BE,EAAAA,CAAezB,KAAAA,OAAAA,CAAa,CAAA,CAAbA,CAGhBA,MAAAA,WAAAA,CAAiBZ,CAAjBY,CAAAA,SADHtB,CAAAA,GAAAA,CAEG,qGAFHA,QAMK+C,EAAAA,WACHA,CAAAA,QACA3C,CADuB,CAAA,CACvBA,CAAAA,CAAAA,OAAAA,CAAgB,CAAD,EAAkB,KAAjB,CAAEC,SAAAA,CAAF,CAAiB,EAC/BuC,EAAAA,CAAgB,EAAA,EAAM,CACpBD,CAAAA,CAAYtC,CAAZsC,CADoB,CAAtBC,CAD+B,CAAjCxC,SAQAkB,MAAAE,cAAA,CAACd,CAAAsC,SAAD,EACE/B,SAAUA,EACVgC,MAAO,CAAE7C,QAAAA,CAAF,CAAWC,SAAAA,CAAX,CAAqBI,QAAAA,CAArB,EAFT,CArBiE,CA6BnEgB,CAAAA,YAAAA,CAAqB,QACrBA;CAAAA,UAAAA,CAAmB,CACjBR,SAAUS,SAAAA,KADO,CAEjBtB,QAASsB,SAAAA,MAAAA,CAAgB,CACvBwB,OAAQxB,SAAAA,OADe,CAEvBrB,SAAUqB,SAAAA,OAFa,CAGvByB,KAAMzB,SAAAA,KAHiB,CAIvBK,QAASL,SAAAA,KAJc,CAKvB0B,GAAI1B,SAAAA,KALmB,CAMvB2B,OAAQ3B,SAAAA,KANe,CAOvB4B,MAAO5B,SAAAA,KAPgB,CAAhBA,CAFQ,CAWjBN,QAASM,SAAAA,OAXQ,CAoBrB6B;QAAgBA,EAAT,CAAgB,CAAhB,CAAoE,KAApD,CAAEC,SAAAA,CAAAA,CAAW,EAAb,CAAiBC,cAAAA,CAAAA,CAAgB,CAAA,CAAjC,CAAwCxC,SAAAA,CAAxC,CAAoD,OACrE,CAAEX,SAAUoD,CAAZ,CAA4B5C,MAAO6C,CAAnC,CAAA,CAAmDrC,KAAAA,WAAAA,CACrDP,CADqDO,MAGnDsC,EAAaD,CAAbC,EAA4BD,CAAAA,KAG9B,EAAA,CAAA,CAACA,CAAD,EAAgBA,CAAAA,KAAAA,SAAAA,CAA0B,GAA1BA,CACf,EAAA,CAAA,6BAA4BD,CAA5B,wBAAkEE,CAAlE,IAAA,CACE,sFADF,CAEE,oDAAmDA,CAAnD,kBA/OD,CAAC3D,EAAM,CAEc,cAAnB,MAAO4D,UAAyBA,OAAAA,KAAAA,CAAa3D,CAAb2D,KAEhC,MACQ1D,MAAJ,CAAUD,CAAV,EADJ,CAGF,MAAO4D,CAAP,CAAU,EAPH,CAkPPC,CAAAA,CAASC,CAAAA,CAAyB/C,CAAzB+C,QAENC,EAAAA,CAAUF,CAAVE,CAAkBT,CAAlBS,CAA4BR,CAA5BQ,CAfkE,CAmBzEV,CAAAA,YAAAA,CAAqB,QACrBA;CAAAA,UAAAA,CAAmB,CACjBC,SAAU9B,SAAAA,OADO,CAEjB+B,cAAe/B,SAAAA,KAFE,CAGjBT,SAAUS,SAAAA,KAHO,CAYdsC,SAASA,EAAT,CAAkC/C,CAAlC,CAA4C,KAC7C8C,EAAS,EAEbzC,MAAAA,SAAAA,QAAAA,CAAuBL,CAAvBK,CAAiCmB,CAAAA,EAAW,IAGrCnB,KAAAA,eAAAA,CAAqBmB,CAArBnB,OAED,CAAEL,SAAAA,CAAF,CAAYsB,KAAAA,CAAZ,CAAkBG,KAAAA,CAAlB,CAAwBZ,GAAAA,CAAxB,CAAA,CAA+BW,CAAAA,UAG/BA,CAAAA,QAAiBnB,KAAAA,UACnByC,CAAAA,KAAAA,MAAAA,CAAkBA,CAAlBA,CAA0BC,CAAAA,CAAyB/C,CAAzB+C,CAA1BD,OAIFrB,CAAAA,CAAOA,CAAPA,EAAeH,CAAfG,EAAuB,OAKnBZ,EACFhB,CAAAA,CAAQ,CAAE4B,KAAAA,CAAF,CAAQwB,WAAYpC,CAApB,MACH,CACLhB,CAAAA,CAAQ,CAAE4B,KAAAA,CAAF,CAAQD,QAAAA,CAAR,MAEJ0B,EAAcH,CAAAA,CAAyB/C,CAAzB+C,CACdG,EAAAA,UACFrD,CAAAA,UAAiBqD,EALd,CASPJ,CAAAA,KAAAA,CAAYjD,CAAZiD,GA7B0C,CAA5CzC,QAgCOyC,EAnC0C,CAqGnDK,QAAgBA,EAAT,EAAuB,OACrB9C,MAAAA,WAAAA,CAAiBZ,CAAjBY,CAAAA,SADqB;AAoB9BU,QAAgBA,EAAT,EAAuB,KACxB,CAAE5B,QAAAA,CAAF,CAAWK,QAAAA,CAAX,CAAA,CAAuBa,KAAAA,WAAAA,CAAiBZ,CAAjBY,EACvB,CAAEhB,SAAAA,CAAF,CAAA,CAAegB,KAAAA,WAAAA,CAAiBP,CAAjBO,CAGN,OAAXlB,EADFJ,CAAAA,GAAAA,CAEE,oEAFFA,eAKesB,MAAAA,YAAAA,CACb,CAACQ,CAAD,CAAK,CAAL,CAAA,EAAiC,CAA5B,IAAA,CAAEC,QAAAA,CAAF,CAAWJ,MAAAA,CAAX,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAqB,EAArB,CAAA,CACe,YAAd,MAAOG,GACT1B,CAAAA,GAAAA,CAAW0B,CAAX1B,GAEIiE,CAMJjE,CANiBkE,CAAAA,CAAgBxC,CAAhBwC,CAAoBhE,CAApBgE,CAMjBlE,CAAAA,CAAAA,CADe2B,CAAFwC,EAAa9D,CAAb8D,CAAuB,SAAvBA,CAAmC,MAChDnE,CAAAA,CAAgBiE,CAAhBjE,CAA4BuB,CAA5BvB,EAV6B,CADpBkB,CAcb,CAAClB,CAAD,CAAUK,CAAV,CAAmBH,CAAnB,CAdagB,CATa,CAiC9Ba,QAAgBA,EAAT,EAAqB,OACnBb,MAAAA,WAAAA,CAAiBP,CAAjBO,CAAAA,OADmB,CAgBrBkD,QAASA,EAAT,CAA6B1C,CAA7B,CAAiC,KAClC,CAAExB,SAAAA,CAAF,CAAA,CAAegB,KAAAA,WAAAA,CAAiBP,CAAjBO,QACZA,MAAAA,QAAAA,CAAc,EAAA,EAAMgD,CAAAA,CAAgBxC,CAAhBwC,CAAoBhE,CAApBgE,CAApBhD,CAAmD,CAACQ,CAAD,CAAKxB,CAAL,CAAnDgB,CAF+B;AAmBjC2C,QAASA,EAAT,CAAmBF,CAAnB,CAA2BP,CAA3B,CAA0CC,CAA1C,CAAiE,CAAtCD,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAW,EAAXA,CAAAA,CAAeC,EAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAgB,CAAA,CAAhBA,CAAAA,MAC3CpD,EAAW+D,CAAAA,GACXnC,EAAWD,CAAAA,GACX,CAAEpB,OAAQ6D,CAAV,CAAwBnE,SAAUoD,CAAlC,CAAA,CAAqDpC,KAAAA,WAAAA,CACvDP,CADuDO,CAIzDkC,EAAAA,CAAWA,CAAAA,CAAqBkB,CAAChB,CAADgB,CAAiBlB,CAAjBkB,6BAkOD,IAlOpBlB,CAAmDE,MAE1DiB,EAAUrD,KAAAA,QAAAA,CACZ,EAAA,EAAMsD,CAAAA,CAAYb,CAAZa,CAAoBvE,CAApBuE,CAA8BpB,CAA9BoB,CAAwCnB,CAAxCmB,CADMtD,CAEZ,CAACyC,CAAD,CAAS1D,CAAT,CAAmBmD,CAAnB,CAA6BC,CAA7B,CAFYnC,KAKV,CAACqD,QAEI,UAILE,EAAgBF,CAAAA,KAAAA,CAAaG,CAAAA,EAsCN,IAtCMA,EAAyBA,CAAAA,MAsCnDhE,WAtCa6D,KAChBE,EAAe,KACb,CAAEjE,OAAAA,CAAF,CAAUE,MAAAA,CAAV,CAAA,CAAoB+D,CACpBR,EAAAA,CAAaC,CAAAA,CAAgBxD,CAAAA,WAAhBwD,CAAkCZ,CAAlCY,GAEb,CAAEhE,SAAAA,CAAF,EAAe+D,EACf,OAAAU,KAAA,CAAYzE,CAAZ,IAGF+D,EAAa,MAAA,OAAA,CAAA,EAAA,CAAKA,CAAL,CAAA,CAAiB/D,SAAU0E,CAAAA,CAAa1E,CAAb0E,CAAuBpE,CAAvBoE,CAA3B,CAAA,EAGf/C,EAAAA,CAASoC,CAATpC,CAAqB,CAAEF,QAAS,CAAA,CAAX,CAArBE,QAEO,KAbU,OAmBL0C,EAAAA,YAAAA,CAAoB,CAAChE,CAAD,CAAS,CAAT,CAAA,EAAyC,KAAhC,CAAEC,OAAAA,CAAF,CAAUN,SAAAA,CAAV,CAAoBQ,MAAAA,CAApB,CAAgC,SAEvEQ,MAAAE,cAAA,CAACT,CAAAiC,SAAD;CACE/B,SAAUH,CAAAA,SACVmC,MAAO,CACLtC,OAAAA,CADK,CAELC,qBAAiB,MAAA,OAAAC,CAAA,EAAAA,CAAK4D,CAAL5D,CAAsBD,CAAtBC,EAFZ,CAGLP,SAAoBoE,CAAClB,CAADkB,CAAWpE,CAAXoE,6BA0LG,IA7LlB,CAIL5D,MAAAA,CAJK,EAFT,CAFuE,CAA7D6D,CAYX,IAZWA,CAxCwD;AAoEjEC,QAASA,EAAT,CACLb,CADK,CAEL1D,CAFK,CAGLmD,CAHK,CAILC,CAJK,CAKL,CAFAD,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAW,EAAXA,CAAAA,CACAC,EAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAgB,CAAA,CAAhBA,CAAAA,CAEwB,YAApB,MAAOpD,KACTA,EAAW4E,SAAAA,CAAU5E,CAAV4E,EAKTC,EAAAA,CAAO1B,CAAAA,QAAAA,CAAiB,YAAjBA,CAA+B,EAA/BA,MACP2B,EAAS9E,CAAAA,SAAAA,MAAAA,CAAwB,CAAxBA,KAET6E,KACEA,IAASC,EACXA,CAAAA,CAAS,OACJ,IAAIA,CAAAA,WAAAA,CAAkBD,CAAlBC,CAAJ,CACLA,CAAAA,CAASA,CAAAA,MAAAA,CAAaD,CAAAA,OAAbC,CAAAA,QAAAA,CAAkC,MAAlCA,CAA0C,EAA1CA,CADJ,YAGE,KAIPC,EAAAA,CAAkBC,CAAAA,CAActB,CAAdsB,CAQtBC,EAAAA,CAAoBF,CAApBE,MAESC,EAAI,EAAGA,EAAIH,CAAAA,QAAwB,EAAEG,EAAG,KAC3C,CAAC7C,CAAD,CAAO8C,CAAP,CAAA,CAAqBJ,CAAAA,CAAgBG,CAAhBH,CAGrB,EAACK,CAAD,EAAYC,CAAAA,CAAYhD,CAAZgD,GAAAA,CAAkCjC,CAAlCiC,KAEZD,CAAAA,KAAAA,CAAaN,CAAbM,QACKD,EAAAA,IAAAA,CAAe,CAAC1E,CAAD,CAAQ6E,CAAR,CAAA,EAAkB,CAElCjD,CAAAA,CADS8C,CAAAA,MAAAA,CAAiB,CAAjBA,CAAoBG,CAApBH,CAA4B,CAA5BA,CACQzB,IAAAA,CAAW6B,CAAAA,EAAKA,CAAAA,KAAhB7B,6BAyHI,SAxHrB,CAAC0B,CAAD,CAAUI,CAAV,CAAA,CAAkBH,CAAAA,CAAYhD,CAAZgD,GAAAA,CAAmCjC,CAAnCiC,CAClBZ,EAAAA,CAAQK,CAAAA,MAAAA,CAAaM,CAAbN,QAEL,CACLvE,OAAQkF,CAAAA,CAAaD,CAAbC,CAAmBhB,CAAAA,MAAAA,CAAY,CAAZA,CAAnBgB,CADH,CAELxF,SAAU,GAAVA,CAAgBwE,CAAAA,CAAM,CAANA,CAFX,CAGLhE,MAAAA,CAHK,CAN+B,CAAjC0E,CAPsC,OAsB1C,KApDP;AAuDFH,QAASA,EAAT,CACEtB,CADF,CAEEqB,CAFF,CAGExB,CAHF,CAIEmC,CAJF,CAKEC,CALF,CAME,CAJAZ,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAkB,EAAlBA,CAAAA,CACAxB,EAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAa,EAAbA,CAAAA,CACAmC,EAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAe,EAAfA,CAAAA,CACAC,EAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAgB,EAAhBA,CAAAA,CAEAjC,EAAAA,QAAAA,CAAe,CAACjD,CAAD,CAAQ6E,CAAR,CAAA,EAAkB,KAC3BjD,EAAiBgC,CAACd,CAADc,CAAa5D,CAAAA,KAAb4D,6BAiGQ,KAhGzBX,EAASgC,CAAAA,OAAAA,CAAoBjF,CAApBiF,CACTE,EAAAA,CAAUD,CAAAA,OAAAA,CAAqBL,CAArBK,CAEdZ,EAAAA,KAAAA,CAAqB,CAAC1C,CAAD,CAAOqB,CAAP,CAAekC,CAAf,CAArBb,CAEItE,EAAAA,WACFuE,CAAAA,CAAcvE,CAAAA,SAAduE,CAA8BD,CAA9BC,CAA+C3C,CAA/C2C,CAAqDtB,CAArDsB,CAA6DY,CAA7DZ,CAR6B,CAAjCtB,QAYOqB,EAbP,CAgBF,cAEAc,SAASA,EAAT,CAAsBxD,CAAtB,CAA4B,OACnBA,EAAAA,MAAAA,CACE,GADFA,CAAAA,OAAAA,CAGH,CAACyD,CAAD,CAAQC,CAAR,CAAA,EACED,CADF,EACWE,CAAAA,KAAAA,CAAaD,CAAbC,CAAAA,CAAwB,CAAxBA,CAAwC,GAAZD,GAAAA,CAAAA,CAAmB,EAAnBA,CAAuB,EAD9D,CAHG1D,CAKH,CALGA,CADmB,CAU5B4C,QAASA,EAAT,CAA6BF,CAA7B,CAA8C,KACxCkB,EAAalB,CAAAA,OAAAA,CAAuB,CAACmB,CAAD,CAAO,CAAP,CAAA,EAAkB,CAAX,CAAC7D,CAAD,CAAW,EACxD6D,EAAAA,CAAK7D,CAAL6D,CAAAA,CAAaL,CAAAA,CAAaxD,CAAbwD,QACNK,EAFiD,CAAzCnB,CAGd,EAHcA,CAKjBA,EAAAA,KAAAA,CAAqB,CAACoB,CAAD,CAAIC,CAAJ,CAAA,EAAU,KACzB,CAACC,CAAD,CAAA,CAAUC,CAAV,CAAA,CAAsBH,CACtBI,EAAAA,CAASN,CAAAA,CAAWI,CAAXJ,MAET,CAACO,CAAD,CAAA,CAAUC,CAAV,CAAA,CAAsBL,CACtBM,EAAAA,CAAST,CAAAA,CAAWO,CAAXP,QAENM,EAAAA,GAAWG,CAAXH,CACHG,CADGH,CACMA,CADNA,CAEHI,CAAAA,CAAeL,CAAfK,CAAyBF,CAAzBE,CATyB,CAA/B5B,CAN4C;AAmB9C4B,QAASA,EAAT,CAAwBR,CAAxB,CAA2BC,CAA3B,CAA8B,OAE1BD,EAAAA,OAEKS,GAFQR,CAAAA,OAERQ,EAFoBT,CAAAA,MAAAA,CAAQ,CAARA,CAAY,EAAZA,CAAAA,MAAAA,CAAqB,CAACU,CAAD,CAAI3B,CAAJ,CAAA,EAAU2B,CAAV,GAAgBT,CAAAA,CAAElB,CAAFkB,CAArCD,CAEpBS,CACHT,CAAAA,CAAEA,CAAAA,OAAFA,CAAa,CAAbA,CADGS,CACeR,CAAAA,CAAEA,CAAAA,OAAFA,CAAa,CAAbA,CADfQ,CAEH,CANwB,CAS9BvB,QAASA,EAAT,CAAqBhD,CAArB,CAA2ByE,CAA3B,CAAgC1D,CAAhC,CAA+C,KACzCoC,EAAO,GACPuB,EACF,IADEA,CAEF1E,CAAAA,QAAAA,CACW,MADXA,CACmB,EADnBA,CAAAA,QAAAA,CAEW,MAFXA,CAEmB,EAFnBA,CAAAA,QAAAA,CAGW,SAHXA,CAGsB,EAHtBA,CAAAA,QAAAA,CAIW,qBAJXA,CAIkC,MAJlCA,CAAAA,QAAAA,CAKW,SALXA,CAKsB,CAAC2E,CAAD,CAAIzF,CAAJ,CAAA,EAAY,CAC9BiE,CAAAA,KAAAA,CAAUjE,CAAViE,QACO,WAFuB,CALlCnD,CAFE0E,CAWF,GAEE1E,EAAAA,SAAAA,CAAc,GAAdA,GACEA,CAAAA,SAAAA,CAAc,IAAdA,CAKJ0E,GAHEA,CAGFA,EAHa,MAGbA,EADAvB,CAAAA,KAAAA,CAAU,GAAVA,CACAuB,CAAAA,CAAAA,EAAW,QACFD,IACTC,GAAW,OAGTD,KAAKC,GAAW,WAKb,CAFO3B,IAAI6B,MAAJ7B,CAAW2B,CAAX3B,CADFhC,CAAAA,CAAgB8D,IAAAA,EAAhB9D,CAA4B,GAC1BgC,CAEP,CAAUI,CAAV,CA/BsC;AAkC/CC,QAASA,EAAT,CAAsBD,CAAtB,CAA4B2B,CAA5B,CAAoC,OAC3B3B,EAAAA,OAAAA,CAAY,CAACjF,CAAD,CAASgB,CAAT,CAAc+D,CAAd,CAAA,EAAwB,CAEzC/E,CAAAA,CAAOgB,CAAPhB,CAAAA,CAAc4G,CAAAA,CAAO7B,CAAP6B,QACP5G,EAHkC,CAApCiF,CAIJ,EAJIA,CAD2B,CAapC4B,QAASA,EAAT,CAAyBC,CAAzB,CAAqCC,CAArC,CAAmD,KAC7CC,EAAyCD,iBANX,qBACH,eAMED,oBANF,eAQ/BG,QAAAA,CAAyBzB,CAAAA,EAAW,CAClB,OAAZA,EAEoB,EAAlBwB,CAAAA,SAAqBA,CAAAA,IAAAA,GACJ,MAAZxB,GACTwB,CAAAA,KAAAA,CAAcxB,CAAdwB,CALgC,CAApCC,QASyB,EAAlBD,CAAAA,CAAAA,OAAAA,CAAgCA,6BAjBR,IAiBxBA,CAA4C,GAbF,CAmBnDtD,QAAgBA,EAAT,CAAyBxC,CAAzB,CAA6B6F,CAA7B,CAAiD,CAApBA,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAe,GAAfA,CAAAA,MAC9B,CAAErH,SAAUoH,CAAZ,CAAwBnH,OAAAA,CAAAA,CAAS,EAAjC,CAAqCC,KAAAA,CAAAA,CAAO,EAA5C,CAAA,CACY,QAAd,GAAA,MAAOsB,EAAP,CAAyBmD,SAAAA,CAAUnD,CAAVmD,CAAzB,CAAyCnD,QAQpC,CAAExB,SANMoH,CAAAA,CACXA,CAAAA,WAAAA,CAAsB,GAAtBA,CAAAA,CACED,CAAAA,CAAgBC,CAAhBD,CAA4B,GAA5BA,CADFC,CAEED,CAAAA,CAAgBC,CAAhBD,CAA4BE,CAA5BF,CAHSC,CAIXC,CAEG,CAAYpH,OAAAA,CAAZ,CAAoBC,KAAAA,CAApB,CAV+C;AAgBxDwE,QAAgBA,EAAT,CAAsB1E,CAAtB,CAAgCM,CAAhC,CAA6C,CAAbA,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAS,EAATA,CAAAA,QAC9BN,EAAAA,QAAAA,CACI,SADJA,CACe,CAAC+G,CAAD,CAAIzF,CAAJ,CAAA,EAAYhB,CAAAA,CAAOgB,CAAPhB,CAAZ,EAA4B,IAAGgB,CAAH,EAD3CtB,CAAAA,QAAAA,CAEI,KAFJA,CAEWwH,CAAAA,EAASlH,CAAAA,CAAOkH,CAAPlH,CAATkH,EAA0BA,CAFrCxH,CAD2C;kBA/ZpDyH,QAAO,CAAoBC,CAApB,CAA6BC,CAA7B,CAA0C,CAAbA,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAO,CAAA,CAAPA,CAAAA,MAC9B,CAAE7H,QAAAA,CAAF,CAAA,CAAckB,KAAAA,WAAAA,CAAiBZ,CAAjBY,CAGL,OAAXlB,EADFJ,CAAAA,GAAAA,CAEE,6EAFFA,QAKAsB,MAAAA,UAAAA,CAAgB,EAAA,EAAM,IAChB2G,EAAM,KACJC,EAAU9H,CAAAA,MAAAA,CAAc+H,CAAAA,EAAM,KAC5BC,EAAmB,MAAA,OAAA,CAAA,EAAA,CAClBD,CADkB,CAAA,CAErBE,KAAK,EAAG,CAKNH,CAAAA,EACAC,EAAAA,MAAAA,EANM,CAFa,CAAA,CAYvBH,EAAAA,CAAQI,CAARJ,CAbgC,CAApB5H,QAgBP8H,EAjBC,CADU,CAAtB5G,CAoBG,CAAClB,CAAD,CAAU6H,CAAV,CAAgBD,CAAhB,CApBH1G,CAR+C,iBAmC1CgH,QAAA,CAAiBxG,CAAjB,CAAqB,CACtByG,CAAAA,CAAmB/D,CAAAA,CAAoB1C,CAApB0C,MACnB,CAAEpE,QAAAA,CAAF,CAAA,CAAckB,KAAAA,WAAAA,CAAiBZ,CAAjBY,CAGL,OAAXlB,EADFJ,CAAAA,GAAAA,CAEE,yEAFFA,eAKOI,EAAAA,WAAAA,CAAmBmI,CAAnBnI,CATmB;qCA6BrBoI,QAAA,CAAkB1G,CAAlB,CAAsB,KACvBzB,EAAW+D,CAAAA,EACXmE,EAAAA,CAAmB/D,CAAAA,CAAoB1C,CAApB0C,QAEhBnE,EAAAA,YAAsBkI,CAAAA,SAJF,2DAqD7BE,QAAO,EAAqB,OACnBnH,MAAAA,WAAAA,CAAiBP,CAAjBO,CAAAA,OADmB;"}