{"version":3,"file":"react-router.js","sources":["../../packages/react-router/modules/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMemoryHistory, parsePath } from 'history';\n\nconst readOnly = __DEV__ ? obj => Object.freeze(obj) : obj => obj;\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\nconst LocationContext = React.createContext({\n  history: null,\n  location: { pathname: '/', search: '', hash: '' },\n  pending: false\n});\n\nif (__DEV__) {\n  LocationContext.Consumer.displayName = 'Location.Consumer';\n  LocationContext.Provider.displayName = 'Location.Provider';\n}\n\nconst RouteContext = React.createContext({\n  outlet: null,\n  params: readOnly({}),\n  pathname: '',\n  route: null\n});\n\nif (__DEV__) {\n  RouteContext.Consumer.displayName = 'Route.Consumer';\n  RouteContext.Provider.displayName = 'Route.Provider';\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n */\nexport function MemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  timeout\n}) {\n  let historyRef = React.useRef(null);\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  return (\n    <Router\n      children={children}\n      history={historyRef.current}\n      timeout={timeout}\n    />\n  );\n}\n\nif (__DEV__) {\n  MemoryRouter.displayName = 'MemoryRouter';\n  MemoryRouter.propTypes = {\n    children: PropTypes.node,\n    timeout: PropTypes.number,\n    initialEntries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          pathname: PropTypes.string,\n          search: PropTypes.string,\n          hash: PropTypes.string,\n          state: PropTypes.object,\n          key: PropTypes.string\n        })\n      ])\n    ),\n    initialIndex: PropTypes.number\n  };\n}\n\n/**\n * Navigate programmatically using a component.\n */\nexport function Navigate({ to, replace = false, state }) {\n  let navigate = useNavigate();\n  navigate(to, { replace, state });\n  return null;\n}\n\nif (__DEV__) {\n  Navigate.displayName = 'Navigate';\n  Navigate.propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ]).isRequired,\n    replace: PropTypes.bool,\n    state: PropTypes.object\n  };\n}\n\n/**\n * Renders the child route's element, if there is one.\n */\nexport function Outlet() {\n  return useOutlet();\n}\n\nif (__DEV__) {\n  Outlet.displayName = 'Outlet';\n  Outlet.propTypes = {};\n}\n\n/**\n * Used in a route config to redirect from one location to another.\n */\nexport function Redirect() {\n  return null;\n}\n\nif (__DEV__) {\n  Redirect.displayName = 'Redirect';\n\n  function redirectChildrenType(props, propName, componentName) {\n    if (props[propName] != null) {\n      return new Error(\n        'A <Redirect> should not have child routes; they will never be rendered.'\n      );\n    }\n  }\n\n  Redirect.propTypes = {\n    children: redirectChildrenType,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n        hash: PropTypes.string\n      })\n    ])\n  };\n}\n\n/**\n * Used in a route config to render an element.\n */\nexport function Route({ element }) {\n  return element;\n}\n\nif (__DEV__) {\n  Route.displayName = 'Route';\n  Route.propTypes = {\n    children: PropTypes.node,\n    element: PropTypes.element,\n    path: PropTypes.string\n  };\n}\n\n// TODO: Remove once React.useTransition is stable.\nconst startTransition = tx => tx();\nconst useTransition = React.useTransition || (() => [startTransition, false]);\n\n/**\n * The root context provider. There should be only one of these in a given app.\n */\nexport function Router({ children = null, history, timeout = 2000 }) {\n  let [location, setLocation] = React.useState(history.location);\n  let [startTransition, pending] = useTransition({ timeoutMs: timeout });\n  let listeningRef = React.useRef(false);\n\n  invariant(\n    !React.useContext(LocationContext).history,\n    `You rendered a <Router> inside another <Router>` +\n      ` but you should only ever render one in a given app.`\n  );\n\n  if (!listeningRef.current) {\n    listeningRef.current = true;\n    history.listen(({ location }) => {\n      startTransition(() => {\n        setLocation(location);\n      });\n    });\n  }\n\n  return (\n    <LocationContext.Provider\n      children={children}\n      value={{ history, location, pending }}\n    />\n  );\n}\n\nif (__DEV__) {\n  Router.displayName = 'Router';\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.shape({\n      action: PropTypes.string,\n      location: PropTypes.object,\n      push: PropTypes.func,\n      replace: PropTypes.func,\n      go: PropTypes.func,\n      listen: PropTypes.func,\n      block: PropTypes.func\n    }),\n    timeout: PropTypes.number\n  };\n}\n\n/**\n * A replacement for React Router v4/5's <Switch> that follows the new \"routes\"\n * semantics. Unlike <Switch> however, <Routes> matches its children <Route>s\n * recursively. Also a replacement for @reach/router's <Router>.\n */\nexport function Routes({ basename = '', caseSensitive = false, children }) {\n  let { pathname: parentPathname, route: parentRoute } = React.useContext(\n    RouteContext\n  );\n  let parentPath = parentRoute && parentRoute.path;\n\n  warning(\n    !parentRoute || parentRoute.path.endsWith('*'),\n    `You rendered <Routes> at \"${parentPathname}\" (under route path \"${parentPath}\")` +\n      ` but the route path has no trailing \"*\", so the child routes won't be able to match` +\n      ` any part of the URL. You should use route path \"${parentPath}/*\" instead.`\n  );\n\n  let routes = createRoutesFromChildren(children);\n\n  return useRoutes(routes, basename, caseSensitive);\n}\n\nif (__DEV__) {\n  Routes.displayName = 'Routes';\n  Routes.propTypes = {\n    basename: PropTypes.string,\n    caseSensitive: PropTypes.bool,\n    children: PropTypes.node\n  };\n}\n\n/**\n * Utility function that creates a routes config object from a React\n * \"children\" object, which is usually either a React element or an\n * array of elements.\n */\nexport function createRoutesFromChildren(children) {\n  let routes = [];\n\n  React.Children.forEach(children, element => {\n    // Ignore non-elements. This allows people to more\n    // easily inline conditionals in their route config.\n    if (!React.isValidElement(element)) return;\n\n    let { children, from, path, to } = element.props;\n\n    // Transparently support React.Fragment and its children.\n    if (element.type === React.Fragment) {\n      routes.push.apply(routes, createRoutesFromChildren(children));\n      return;\n    }\n\n    path = path || from || '/';\n\n    // Components that have a to prop are redirects.\n    // All others should use path + element (and maybe children) props.\n    let route;\n    if (to) {\n      route = { path, redirectTo: to };\n    } else {\n      route = { path, element };\n\n      let childRoutes = createRoutesFromChildren(children);\n      if (childRoutes.length) {\n        route.children = childRoutes;\n      }\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Blocks all navigation attempts. This is useful for preventing the page from\n * changing until some condition is met, like saving form data.\n */\nexport function useBlocker(blocker, when = true) {\n  let { history } = React.useContext(LocationContext);\n\n  invariant(\n    history != null,\n    'navigation blocking may be used only in the context of a <Router> component'\n  );\n\n  React.useEffect(() => {\n    if (when) {\n      let unblock = history.block(tx => {\n        let autoUnblockingTx = {\n          ...tx,\n          retry() {\n            // Automatically unblock the transition so it can\n            // play all the way through before retrying it.\n            // TODO: Figure out how to re-enable this block if the\n            // transition is cancelled for some reason.\n            unblock();\n            tx.retry();\n          }\n        };\n\n        blocker(autoUnblockingTx);\n      });\n\n      return unblock;\n    }\n  }, [history, when, blocker]);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n */\nexport function useHref(to) {\n  let resolvedLocation = useResolvedLocation(to);\n  let { history } = React.useContext(LocationContext);\n\n  invariant(\n    history != null,\n    'href resolution may be used only in the context of a <Router> component'\n  );\n\n  return history.createHref(resolvedLocation);\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * NOTE: If you're using this it may mean you're doing some of your own \"routing\"\n * in your app, and we'd like to know what your use case is. We may be able to\n * provide something higher-level to better suit your needs.\n */\nexport function useLocation() {\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n */\nexport function useMatch(to) {\n  let location = useLocation();\n  let resolvedLocation = useResolvedLocation(to);\n  // TODO: Try to match search + hash as well\n  return location.pathname === resolvedLocation.pathname;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n */\nexport function useNavigate() {\n  let { history, pending } = React.useContext(LocationContext);\n  let { pathname } = React.useContext(RouteContext);\n\n  invariant(\n    history != null,\n    'navigation may be used only in the context of a <Router> component'\n  );\n\n  let navigate = React.useCallback(\n    (to, { replace, state } = {}) => {\n      if (typeof to === 'number') {\n        history.go(to);\n      } else {\n        let relativeTo = resolveLocation(to, pathname);\n\n        // If we are pending transition, use REPLACE instead of PUSH.\n        // This will prevent URLs that we started navigating to but\n        // never fully loaded from appearing in the history stack.\n        let method = !!replace || pending ? 'replace' : 'push';\n        history[method](relativeTo, state);\n      }\n    },\n    [history, pending, pathname]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the outlet element at this level of the route hierarchy. Used to\n * render child routes.\n */\nexport function useOutlet() {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns a hash of the dynamic params that were matched in the route path.\n * This is useful for using ids embedded in the URL to fetch data, but we\n * eventually want to provide something at a higher level for this.\n */\nexport function useParams() {\n  return React.useContext(RouteContext).params;\n}\n\n/**\n * Returns a fully-resolved location object relative to the current location.\n */\nexport function useResolvedLocation(to) {\n  let { pathname } = React.useContext(RouteContext);\n  return React.useMemo(() => resolveLocation(to, pathname), [to, pathname]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * Route objects may take one of 2 forms:\n *\n * - { path, element, children }\n * - { path, redirectTo }\n *\n * We should probably write this up in TypeScript instead of in a comment. In\n * fact, what am I even doing here. Nobody is ever going to read this.\n */\nexport function useRoutes(routes, basename = '', caseSensitive = false) {\n  let location = useLocation();\n  let navigate = useNavigate();\n  let { params: parentParams, pathname: parentPathname } = React.useContext(\n    RouteContext\n  );\n\n  basename = basename ? joinPaths([parentPathname, basename]) : parentPathname;\n\n  let matches = React.useMemo(\n    () => matchRoutes(routes, location, basename, caseSensitive),\n    [routes, location, basename, caseSensitive]\n  );\n\n  if (!matches) {\n    // TODO: Warn about nothing matching, suggest using a catch-all route.\n    return null;\n  }\n\n  // If we matched a redirect, navigate and return null.\n  let redirectMatch = matches.find(match => isRedirectRoute(match.route));\n  if (redirectMatch) {\n    let { params, route } = redirectMatch;\n    let relativeTo = resolveLocation(route.redirectTo, parentPathname);\n\n    let { pathname } = relativeTo;\n    if (/:\\w+/.test(pathname)) {\n      // Allow param interpolation into <Redirect to>, e.g.\n      // <Redirect from=\"users/:id\" to=\"profile/:id\">\n      relativeTo = { ...relativeTo, pathname: generatePath(pathname, params) };\n    }\n\n    navigate(relativeTo, { replace: true });\n\n    return null;\n  }\n\n  // TODO: Initiate preload sequence here.\n\n  // Otherwise render an element.\n  let element = matches.reduceRight((outlet, { params, pathname, route }) => {\n    return (\n      <RouteContext.Provider\n        children={route.element}\n        value={{\n          outlet,\n          params: readOnly({ ...parentParams, ...params }),\n          pathname: joinPaths([basename, pathname]),\n          route\n        }}\n      />\n    );\n  }, null);\n\n  return element;\n}\n\nfunction isRedirectRoute(route) {\n  return route.redirectTo != null;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Matches the given routes to a location and returns the match data.\n */\nexport function matchRoutes(\n  routes,\n  location,\n  basename = '',\n  caseSensitive = false\n) {\n  if (typeof location === 'string') {\n    location = parsePath(location);\n  }\n\n  // TODO: Validate location\n  // - it should have a pathname\n  let base = basename.replace(/^\\/+|\\/+$/g, '');\n  let target = location.pathname.slice(1);\n\n  if (base) {\n    if (base === target) {\n      target = '';\n    } else if (target.startsWith(base)) {\n      target = target.slice(base.length).replace(/^\\/+/, '');\n    } else {\n      return null;\n    }\n  }\n\n  let flattenedRoutes = flattenRoutes(routes);\n\n  // TODO: Validate the routes config\n  // - routes should all have paths and elements\n  // - redirects should have a redirectTo\n  // - redirects should not have children\n  // - warn about unreachable routes\n\n  rankFlattenedRoutes(flattenedRoutes);\n\n  for (let i = 0; i < flattenedRoutes.length; ++i) {\n    let [path, flatRoutes] = flattenedRoutes[i];\n\n    // TODO: Match on search, state too\n    let [matcher] = compilePath(path, /* end */ true, caseSensitive);\n\n    if (matcher.test(target)) {\n      return flatRoutes.map((route, index) => {\n        let routes = flatRoutes.slice(0, index + 1);\n        let path = joinPaths(routes.map(r => r.path));\n        let [matcher, keys] = compilePath(path, /* end */ false, caseSensitive);\n        let match = target.match(matcher);\n\n        return {\n          params: createParams(keys, match.slice(2)),\n          pathname: '/' + match[1],\n          route\n        };\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction flattenRoutes(\n  routes,\n  flattenedRoutes = [],\n  parentPath = '',\n  parentRoutes = [],\n  parentIndexes = []\n) {\n  routes.forEach((route, index) => {\n    let path = joinPaths([parentPath, route.path]);\n    let routes = parentRoutes.concat(route);\n    let indexes = parentIndexes.concat(index);\n\n    flattenedRoutes.push([path, routes, indexes]);\n\n    if (route.children) {\n      flattenRoutes(route.children, flattenedRoutes, path, routes, indexes);\n    }\n  });\n\n  return flattenedRoutes;\n}\n\nconst paramRe = /^:\\w+$/;\n\nfunction computeScore(path) {\n  return path\n    .split('/')\n    .reduce(\n      (score, segment) =>\n        score + (paramRe.test(segment) ? 2 : segment === '*' ? -1 : 10),\n      0\n    );\n}\n\nfunction rankFlattenedRoutes(flattenedRoutes) {\n  let pathScores = flattenedRoutes.reduce((memo, [path]) => {\n    memo[path] = computeScore(path);\n    return memo;\n  }, {});\n\n  flattenedRoutes.sort((a, b) => {\n    let [aPath, , aIndexes] = a;\n    let aScore = pathScores[aPath];\n\n    let [bPath, , bIndexes] = b;\n    let bScore = pathScores[bPath];\n\n    return aScore !== bScore\n      ? bScore - aScore // Higher score first\n      : compareIndexes(aIndexes, bIndexes);\n  });\n}\n\nfunction compareIndexes(a, b) {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? a[a.length - 1] - b[b.length - 1] // Earlier siblings come first\n    : 0; // It doesn't make sense to rank non-siblings by index, so they sort equal\n}\n\nfunction compilePath(path, end, caseSensitive) {\n  let keys = [];\n  let pattern =\n    '^(' +\n    path\n      .replace(/^\\/+/, '') // Ignore leading /\n      .replace(/\\*\\//, '') // Ignore */\n      .replace(/\\/?\\*?$/, '') // Ignore trailing /*, we'll handle it below\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_, key) => {\n        keys.push(key);\n        return '([^\\\\/]+)';\n      }) +\n    ')';\n\n  if (path.endsWith('*')) {\n    if (path.endsWith('/*')) {\n      // Don't include the / in params['*']\n      pattern += '\\\\/?';\n    }\n    keys.push('*');\n    pattern += '(.*)';\n  } else if (end) {\n    pattern += '\\\\/?';\n  }\n\n  if (end) pattern += '$';\n\n  let flags = caseSensitive ? undefined : 'i';\n  let matcher = new RegExp(pattern, flags);\n\n  return [matcher, keys];\n}\n\nfunction createParams(keys, values) {\n  return keys.reduce((params, key, index) => {\n    // TODO: Use decodeURIComponent here to decode values?\n    params[key] = values[index];\n    return params;\n  }, {});\n}\n\nconst trimTrailingSlashes = path => path.replace(/\\/+$/, '');\nconst normalizeSlashes = path => path.replace(/\\/\\/+/g, '/');\nconst joinPaths = paths => normalizeSlashes(paths.join('/'));\nconst splitPath = path => normalizeSlashes(path).split('/');\n\nfunction resolvePathname(toPathname, fromPathname) {\n  let segments = splitPath(trimTrailingSlashes(fromPathname));\n  let relativeSegments = splitPath(toPathname);\n\n  relativeSegments.forEach(segment => {\n    if (segment === '..') {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== '.') {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? joinPaths(segments) : '/';\n}\n\n/**\n * Returns a fully resolve location object relative to the given pathname.\n */\nexport function resolveLocation(to, fromPathname = '/') {\n  let { pathname: toPathname, search = '', hash = '' } =\n    typeof to === 'string' ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith('/')\n      ? resolvePathname(toPathname, '/')\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return { pathname, search, hash };\n}\n\n/**\n * Creates a path with params interpolated.\n */\nexport function generatePath(pathname, params = {}) {\n  return pathname\n    .replace(/:(\\w+)/g, (_, key) => params[key] || `:${key}`)\n    .replace(/\\*$/, splat => params[splat] || splat);\n}\n"],"names":["readOnly","process","env","NODE_ENV","obj","Object","invariant","cond","message","Error","LocationContext","React","history","location","pathname","search","hash","pending","RouteContext","outlet","params","route","MemoryRouter","children","initialEntries","initialIndex","timeout","historyRef","createMemoryHistory","createElement","Router","PropTypes","state","key","Navigate","to","replace","useNavigate","navigate","Outlet","useOutlet","Redirect","redirectChildrenType","props","propName","from","Route","element","path","startTransition","tx","useTransition","setLocation","timeoutMs","listeningRef","Provider","value","action","push","go","listen","block","Routes","basename","caseSensitive","parentPathname","parentRoute","parentPath","console","e","routes","createRoutesFromChildren","useRoutes","redirectTo","childRoutes","useLocation","relativeTo","resolveLocation","method","useResolvedLocation","parentParams","joinPaths","matches","matchRoutes","redirectMatch","match","test","generatePath","i","flattenedRoutes","flatRoutes","compilePath","matcher","target","index","r","keys","createParams","parsePath","base","flattenRoutes","rankFlattenedRoutes","parentRoutes","parentIndexes","indexes","paramRe","computeScore","score","segment","pathScores","memo","a","b","aIndexes","aScore","bIndexes","bScore","compareIndexes","siblings","n","end","pattern","_","RegExp","undefined","values","paths","resolvePathname","toPathname","fromPathname","segments","normalizeSlashes","relativeSegments","splat","useBlocker","blocker","when","unblock","autoUnblockingTx","retry","useHref","resolvedLocation","useMatch","useParams"],"mappings":"2NAIA,IAAMA,cAAW,GAAAC,OAAAC,IAAAC,SAAA,CAAU,SAAAC,SAAOC,OAAAA,OAAAA,CAAcD,CAAdC,EAAjB,CAAsC,SAAAD,SAAOA,GAE9DE,SAASA,EAAT,CAAmBC,CAAnB,CAAyBC,CAAzB,CAAkC,IAC5B,CAACD,EAAM,KAAUE,MAAJ,CAAUD,CAAV,CAAN,CADqB,CAoBlC,IAAME,EAAkBC,KAAAA,cAAAA,CAAoB,CAC1CC,QAAS,IADiC,CAE1CC,SAAU,CAAEC,SAAU,GAAZ,CAAiBC,OAAQ,EAAzB,CAA6BC,KAAM,EAAnC,CAFgC,CAG1CC,QAAS,CAAA,CAHiC,CAApBN;YAMxB,uBAAA,GACED,CAAAA,SAAAA,YACAA,CADuC,mBACvCA,CAAAA,CAAAA,SAAAA,YAAAA,CAAuC,mBAFzC,CAKA,KAAMQ,EAAeP,KAAAA,cAAAA,CAAoB,CACvCQ,OAAQ,IAD+B,CAEvCC,OAAQpB,CAAAA,CAAS,EAATA,CAF+B,CAGvCc,SAAU,EAH6B,CAIvCO,MAAO,IAJgC,CAApBV,cAOrB,uBAAA,GACEO,CAAAA,SAAAA,YACAA,CADoC,gBACpCA,CAAAA,CAAAA,SAAAA,YAAAA,CAAoC,gBAFtC,CAYOI;QAASA,EAAT,EAAA,CAKJ,CAAA,IAJDC,YAIC,CAHDC,kBAGC,CAFDC,gBACAC,EAAAA,eAEIC,EAAahB,KAAAA,OAAAA,CAAa,IAAbA,CAES,OAAtBgB,CAAAA,WACFA,CAAAA,SAAqBC,mBAAAA,CAAoB,CAAEJ,eAAAA,CAAF,CAAkBC,aAAAA,CAAlB,CAApBG,SAIrBjB,MAAAkB,cAAA,CAACC,CAAD,EACEP,SAAUA,EACVX,QAASe,CAAAA,SACTD,QAASA,EAHX,CARD;YAgBH,uBAAA,GACEJ,CAAAA,YACAA,CAD2B,cAC3BA,CAAAA,CAAAA,UAAAA,CAAyB,CACvBC,SAAUQ,SAAAA,KADa,CAEvBL,QAASK,SAAAA,OAFc,CAGvBP,eAAgBO,SAAAA,QAAAA,CACdA,SAAAA,UAAAA,CAAoB,CAClBA,SAAAA,OADkB,CAElBA,SAAAA,MAAAA,CAAgB,CACdjB,SAAUiB,SAAAA,OADI,CAEdhB,OAAQgB,SAAAA,OAFM,CAGdf,KAAMe,SAAAA,OAHQ,CAIdC,MAAOD,SAAAA,OAJO,CAKdE,IAAKF,SAAAA,OALS,CAAhBA,CAFkB,CAApBA,CADcA,CAHO,CAevBN,aAAcM,SAAAA,OAfS,CAF3B,CAwBOG,SAASA,EAAT,EAAA,CAAkD,CAAA,IAA9BC,MAA8B,YAA1BC,EAAAA,YAAU,CAAA,GAAOJ,EAAAA,QAC/BK,EAAAA,EACfC,CAASH,CAATG,CAAa,CAAEF,QAAAA,CAAF,CAAWJ,MAAAA,CAAX,CAAbM,QACO,KAHgD;YAMzD,uBAAA,GACEJ,CAAAA,YACAA,CADuB,UACvBA,CAAAA,CAAAA,UAAAA,CAAqB,CACnBC,GAAIJ,SAAAA,UAAAA,CAAoB,CACtBA,SAAAA,OADsB,CAEtBA,SAAAA,MAAAA,CAAgB,CACdjB,SAAUiB,SAAAA,OADI,CAEdhB,OAAQgB,SAAAA,OAFM,CAGdf,KAAMe,SAAAA,OAHQ,CAAhBA,CAFsB,CAApBA,CAAAA,WADe,CASnBK,QAASL,SAAAA,KATU,CAUnBC,MAAOD,SAAAA,OAVY,CAFvB,CAmBAQ,SAAgBA,EAAT,EAAkB,OAChBC,EAAAA,EADgB,aAIzB,uBAAA,GACED,CAAAA,YACAA,CADqB,QACrBA,CAAAA,CAAAA,UAAAA,CAAmB,EAFrB,CAQAE,SAAgBA,EAAT,EAAoB,OAClB,KADkB;YAI3B,uBAAA,GACEA,CAAAA,YAUAA,CAVuB,UAUvBA,CAAAA,CAAAA,UAAAA,CAAqB,CACnBlB,SATFmB,QAAA,CAA8BC,CAA9B,CAAqCC,CAArC,CAA8D,IACrC,MAAnBD,CAAAA,CAAMC,CAAND,QACSlC,MAAJ,CACL,yEADK,CAFmD,CAQzC,CAEnBoC,KAAMd,SAAAA,OAFa,CAGnBI,GAAIJ,SAAAA,UAAAA,CAAoB,CACtBA,SAAAA,OADsB,CAEtBA,SAAAA,MAAAA,CAAgB,CACdjB,SAAUiB,SAAAA,OADI,CAEdhB,OAAQgB,SAAAA,OAFM,CAGdf,KAAMe,SAAAA,OAHQ,CAAhBA,CAFsB,CAApBA,CAHe,CAXvB,CA4BOe,SAASA,EAAT,EAAA,CAA4B,iBAAA;YAInC,uBAAA,GACEA,CAAAA,YACAA,CADoB,OACpBA,CAAAA,CAAAA,UAAAA,CAAkB,CAChBvB,SAAUQ,SAAAA,KADM,CAEhBgB,QAAShB,SAAAA,QAFO,CAGhBiB,KAAMjB,SAAAA,OAHU,CAFpB,CAUwBkB,SAAlBA,EAAkB,CAAAC,CAAA,QAAMA,EAAAA,GAC9B,IAAMC,EAAgBxC,KAAAA,cAAhBwC,EAAwC,iBAAM,CAACF,CAAD,CAAkB,CAAA,CAAlB,EAK7CnB;QAASA,EAAT,EAAA,CAA8D,CAAA,gBAA5CP,EAAAA,YAAW,MAAiC,KAA3BX,4BAASc,aAAU,QAC7Bf,KAAAA,SAAAA,CAAeC,CAAAA,SAAfD,CAAzBE,EAAAA,UAAUuC,SACkBD,CAAAA,CAAc,CAAEE,UAAW3B,CAAb,CAAdyB,CAFkC,KAE9DF,MAAiBhC,EAAAA,KAClBqC,EAAAA,CAAe3C,KAAAA,OAAAA,CAAa,CAAA,CAAbA,CAGhBA,MAAAA,WAAAA,CAAiBD,CAAjBC,CAAAA,6CADHL,CAAAA,GAAAA,CAEE,qGAFFA,EAAAA,CAAAA,GAAAA,QAMKgD,EAAAA,WACHA,CAAAA,QACA1C,CADuB,CAAA,CACvBA,CAAAA,CAAAA,OAAAA,CAAe,WAAkB,KAAfC,YAChBoC,EAAAA,CAAgB,UAAM,CACpBG,CAAAA,CAAYvC,CAAZuC,CADoB,CAAtBH,CAD+B,CAAjCrC,SAQAD,MAAAkB,cAAA,CAACnB,CAAA6C,SAAD;CACEhC,SAAUA,EACViC,MAAO,CAAE5C,QAAAA,CAAF,CAAWC,SAAAA,CAAX,CAAqBI,QAAAA,CAArB,EAFT,CArBiE,aA4BrE,uBAAA,GACEa,CAAAA,YACAA,CADqB,QACrBA,CAAAA,CAAAA,UAAAA,CAAmB,CACjBP,SAAUQ,SAAAA,KADO,CAEjBnB,QAASmB,SAAAA,MAAAA,CAAgB,CACvB0B,OAAQ1B,SAAAA,OADe,CAEvBlB,SAAUkB,SAAAA,OAFa,CAGvB2B,KAAM3B,SAAAA,KAHiB,CAIvBK,QAASL,SAAAA,KAJc,CAKvB4B,GAAI5B,SAAAA,KALmB,CAMvB6B,OAAQ7B,SAAAA,KANe,CAOvB8B,MAAO9B,SAAAA,KAPgB,CAAhBA,CAFQ,CAWjBL,QAASK,SAAAA,OAXQ,CAFrB,CAsBO+B;QAASA,EAAT,EAAA,CAAoE,CAAA,gBAAlDC,EAAAA,YAAW,IAAuC,sBAAnCC,EAAAA,YAAgB,CAAA,GAAOzC,EAAAA,WAAY,OAClBZ,KAAAA,WAAAA,CACrDO,CADqDP,CADkB,CACzDsD,YADyD,CAClCC,SAGnCC,EAAAA,CAAaD,CAAbC,EAA4BD,CAAAA,iDAG9B,CA5OE,CA4OF,CAACA,CA5OC,EA4OcA,CAAAA,KAAAA,SAAAA,CAA0B,GAA1BA,CA5Od,CA6OF,CA7OE,CA6OF,4BA7OE,CA6O2BD,CA7O3B,wBAAA,CA6OiEE,CA7OjE,0IAAA,EA+OoDA,CA/OpD,eAAA,EAAA,CAAC5D,EAAM,CAEc,cAAnB,MAAO6D,UAAyBA,OAAAA,KAAAA,CAAa5D,CAAb4D,KAEhC,MACQ3D,MAAJ,CAAUD,CAAV;AADJ,CAGF,MAAO6D,CAAP,CAAU,EAPH,aAkPPC,EAAAA,CAASC,CAAAA,CAAyBhD,CAAzBgD,QAENC,EAAAA,CAAUF,CAAVE,CAAkBT,CAAlBS,CAA4BR,CAA5BQ,CAfkE,aAkB3E,uBAAA,GACEV,CAAAA,YACAA,CADqB,QACrBA,CAAAA,CAAAA,UAAAA,CAAmB,CACjBC,SAAUhC,SAAAA,OADO,CAEjBiC,cAAejC,SAAAA,KAFE,CAGjBR,SAAUQ,SAAAA,KAHO,CAFrB,CAcOwC;QAASA,EAAT,CAAkChD,CAAlC,CAA4C,KAC7C+C,EAAS,EAEb3D,MAAAA,SAAAA,QAAAA,CAAuBY,CAAvBZ,CAAiC,SAAAoC,EAAW,IAGrCpC,KAAAA,eAAAA,CAAqBoC,CAArBpC,GAHqC,MAKPoC,CAAAA,MALO,CAKpCxB,YALoC,CAK1BsB,QAL0B,CAKpBG,QAAMb,EAAAA,KAGxBY,EAAAA,QAAiBpC,KAAAA,UACnB2D,CAAAA,KAAAA,MAAAA,CAAkBA,CAAlBA,CAA0BC,CAAAA,CAAyBhD,CAAzBgD,CAA1BD,GAIFtB,CAgBAsB,CAhBOtB,CAgBPsB,EAhBezB,CAgBfyB,EAhBuB,GAgBvBA,CAXInC,EACFd,EAAQ,CAAE2B,KAAAA,CAAF,CAAQyB,WAAYtC,CAApB,GAERd,EAAQ,CAAE2B,KAAAA,CAAF,CAAQD,QAAAA,CAAR,EAEJ2B,EAAcH,CAAAA,CAAyBhD,CAAzBgD,EACdG,CAAAA,UACFrD,CAAAA,UAAiBqD,GAIrBJ,CAAAA,CAAAA,KAAAA,CAAYjD,CAAZiD,GA7B0C,CAA5C3D,QAgCO2D,EAnC0C,CAqGnDK,QAAgBA,EAAT,EAAuB,OACrBhE,MAAAA,WAAAA,CAAiBD,CAAjBC,CAAAA,SADqB;AAoB9B0B,QAAgBA,EAAT,EAAuB,CAAA,MACD1B,KAAAA,WAAAA,CAAiBD,CAAjBC,CADC,CACtBC,WADsB,CACbK,WADa,CAEtBH,EAAaH,KAAAA,WAAAA,CAAiBO,CAAjBP,UAGN,OAAXC,sCADFN,CAAAA,GAAAA,CAEE,oEAFFA,EAAAA,CAAAA,GAAAA,eAKeK,MAAAA,YAAAA,CACb,SAACwB,IAAgC,CAAA,iBAAP,IAAnBC,EAAAA,UAASJ,EAAAA,QACI,YAAd,MAAOG,GACTvB,CAAAA,GAAAA,CAAWuB,CAAXvB,GAEIgE,CAMJhE,CANiBiE,CAAAA,CAAgB1C,CAAhB0C,CAAoB/D,CAApB+D,CAMjBjE,CAAAA,CAAAA,CADewB,CAAF0C,EAAa7D,CAAb6D,CAAuB,SAAvBA,CAAmC,MAChDlE,CAAAA,CAAgBgE,CAAhBhE,CAA4BoB,CAA5BpB,EAV6B,CADpBD,CAcb,CAACC,CAAD,CAAUK,CAAV,CAAmBH,CAAnB,CAdaH,CATa,CAiC9B6B,QAAgBA,EAAT,EAAqB,OACnB7B,MAAAA,WAAAA,CAAiBO,CAAjBP,CAAAA,OADmB;AAgBrBoE,QAASA,EAAT,CAA6B5C,CAA7B,CAAiC,KAChCrB,EAAaH,KAAAA,WAAAA,CAAiBO,CAAjBP,iBACZA,MAAAA,QAAAA,CAAc,iBAAMkE,EAAAA,CAAgB1C,CAAhB0C,CAAoB/D,CAApB+D,EAApBlE,CAAmD,CAACwB,CAAD,CAAKrB,CAAL,CAAnDH,CAF+B;AAmBxC6D,QAAgBA,EAAT,CAAmBF,CAAnB,CAA2BP,CAA3B,CAA0CC,CAA1C,CAAiE,UAAtCD,IAAAA,EAAW,aAAIC,IAAAA,EAAgB,CAAA,OAC3DnD,EAAW8D,CAAAA,GACXrC,EAAWD,CAAAA,KAC0C1B,KAAAA,WAAAA,CACvDO,CADuDP,EAA3CqE,WAAwBf,YAItCF,EAAAA,CAAWA,CAAAA,CAAWkB,CAAAA,CAAU,CAAChB,CAAD,CAAiBF,CAAjB,CAAVkB,CAAXlB,CAAmDE,CAE1DiB,EAAAA,CAAUvE,KAAAA,QAAAA,CACZ,iBAAMwE,EAAAA,CAAYb,CAAZa,CAAoBtE,CAApBsE,CAA8BpB,CAA9BoB,CAAwCnB,CAAxCmB,EADMxE,CAEZ,CAAC2D,CAAD,CAASzD,CAAT,CAAmBkD,CAAnB,CAA6BC,CAA7B,CAFYrD,KAKV,CAACuE,QAEI,UAILE,EAAgBF,CAAAA,KAAAA,CAAa,SAAAG,SAsCN,OAtC+BA,CAAAA,MAsCnDhE,YAtCa6D,QAChBE,IACIhE,CAYC,CAZiBgE,CAAAA,OAYjB,CAXHR,CAWG,CAXUC,CAAAA,CADOO,CAAAA,MACS/D,WAAhBwD,CAAkCZ,CAAlCY,CAWV,CATD/D,CASC,CATY8D,UASZ,CARH,MAAAU,KAAA,CAAYxE,CAAZ,CAQG,GALL8D,CAKK,MALaA,GAAY9D,SAAUyE,CAAAA,CAAazE,CAAbyE,CAAuBnE,CAAvBmE,GAKnC,EAFPjD,CAAAA,CAASsC,CAATtC,CAAqB,CAAEF,QAAS,CAAA,CAAX,CAArBE,CAEO,CAAA,MAMK4C,CAAAA,YAAAA,CAAoB,SAAC/D,IAAwC,CAAA,IAAtBL,YAAsB,CAAZO,gBAE3DV,MAAAkB,cAAA,CAACX,CAAAqC,SAAD,EACEhC,SAAUF,CAAAA;AACVmC,MAAO,CACLrC,OAAAA,CADK,CAELC,OAAQpB,CAAAA,MAAcgF,cAAdhF,CAFH,CAGLc,SAAUmE,CAAAA,CAAU,CAAClB,CAAD,CAAWjD,CAAX,CAAVmE,CAHL,CAIL5D,MAAAA,CAJK,EAFT,CAFuE,CAA7D6D,CAYX,IAZWA,CAxCwD;AAoExEC,QAAgBA,EAAT,CACLb,CADK,CAELzD,CAFK,CAGLkD,CAHK,CAILC,CAJK,CAKL,YA8BSwB,KACkBC,CAAAA,CAAgBD,CAAhBC,MAAdC,UAGKC,CAAAA,KAAAA,GAAAA,CAAkC3B,CAAlC2B,IAEZC,KAAAA,CAAaC,CAAbD,WACKF,CAAAA,IAAAA,CAAe,SAACrE,EAAOyE,EAAU,CAClCxB,CAAAA,CAASoB,CAAAA,MAAAA,CAAiB,CAAjBA,CAAoBI,CAApBJ,CAA4B,CAA5BA,CACT1C,EAAAA,CAAOiC,CAAAA,CAAUX,CAAAA,IAAAA,CAAW,SAAAyB,SAAKA,EAAAA,MAAhBzB,CAAVW,CAF2B,OAGhBU,CAAAA,CAAY3C,CAAZ2C,GAAAA,CAAmC3B,CAAnC2B,CAARK,EAAAA,KACVX,EAAAA,CAAQQ,CAAAA,MAAAA,KAAAA,QAEL,CACLzE,OAAQ6E,CAAAA,CAAaD,CAAbC,CAAmBZ,CAAAA,MAAAA,CAAY,CAAZA,CAAnBY,CADH,CAELnF,SAAU,GAAVA,CAAgBuE,CAAAA,CAAM,CAANA,CAFX,CAGLhE,MAAAA,CAHK,CAN+B,CAAjCqE,YAvCX3B,IAAAA,EAAW,aACXC,IAAAA,EAAgB,CAAA,EAEQ,YAApB,MAAOnD,KACTA,EAAWqF,SAAAA,CAAUrF,CAAVqF,EAKTC,EAAAA,CAAOpC,CAAAA,QAAAA,CAAiB,YAAjBA,CAA+B,EAA/BA,MACP8B,EAAShF,CAAAA,SAAAA,MAAAA,CAAwB,CAAxBA,KAETsF,KACEA,IAASN,EACXA,CAAAA,CAAS,OACJ,IAAIA,CAAAA,WAAAA,CAAkBM,CAAlBN,CAAJ,CACLA,CAAAA,CAASA,CAAAA,MAAAA,CAAaM,CAAAA,OAAbN,CAAAA,QAAAA,CAAkC,MAAlCA,CAA0C,EAA1CA,CADJ,YAGE,UAIPJ,EAAkBW,CAAAA,CAAc9B,CAAd8B,CAQtBC;CAAAA,CAAoBZ,CAApBY,MAESb,EAAI,EAAGA,EAAIC,CAAAA,QAAwB,EAAED,SAArCA,wCAsBF,KApDP,CAuDFY,QAASA,EAAT,CACE9B,CADF,CAEEmB,CAFF,CAGEtB,CAHF,CAIEmC,CAJF,CAKEC,CALF,CAME,UAJAd,IAAAA,EAAkB,aAClBtB,IAAAA,EAAa,aACbmC,IAAAA,EAAe,aACfC,IAAAA,EAAgB,GAEhBjC,EAAAA,QAAAA,CAAe,SAACjD,EAAOyE,EAAU,KAC3B9C,EAAOiC,CAAAA,CAAU,CAACd,CAAD,CAAa9C,CAAAA,KAAb,CAAV4D,EACPX,EAASgC,CAAAA,OAAAA,CAAoBjF,CAApBiF,CACTE,EAAAA,CAAUD,CAAAA,OAAAA,CAAqBT,CAArBS,CAEdd,EAAAA,KAAAA,CAAqB,CAACzC,CAAD,CAAOsB,CAAP,CAAekC,CAAf,CAArBf,CAEIpE,EAAAA,WACF+E,CAAAA,CAAc/E,CAAAA,SAAd+E,CAA8BX,CAA9BW,CAA+CpD,CAA/CoD,CAAqD9B,CAArD8B,CAA6DI,CAA7DJ,CAR6B,CAAjC9B,QAYOmB,EAbP,CAgBF,IAAMgB,EAAU,QAEhBC,SAASA,EAAT,CAAsB1D,CAAtB,CAA4B,OACnBA,EAAAA,MAAAA,CACE,GADFA,CAAAA,OAAAA,CAGH,SAAC2D,EAAOC,SACND,IAASF,CAAAA,KAAAA,CAAaG,CAAbH,CAAAA,CAAwB,CAAxBA,CAAwC,GAAZG,GAAAA,CAAAA,CAAmB,EAAnBA,CAAuB,IAJ3D5D,CAKH,CALGA,CADmB;AAU5BqD,QAASA,EAAT,CAA6BZ,CAA7B,CAA8C,KACxCoB,EAAapB,CAAAA,OAAAA,CAAuB,SAACqB,IAAiB,CAAV9D,CAAAA,KAC9C8D,EAAAA,CAAK9D,CAAL8D,CAAAA,CAAaJ,CAAAA,CAAa1D,CAAb0D,QACNI,EAFiD,CAAzCrB,CAGd,EAHcA,CAKjBA,EAAAA,KAAAA,CAAqB,SAACsB,EAAGC,EAAM,KACfC,EAAYF,CAAAA,EAAAA,CACtBG,EAAAA,CAASL,CAAAA,CADaE,CAAAA,EAAAA,CACbF,MAECM,EAAYH,CAAAA,EAAAA,CACtBI,EAAAA,CAASP,CAAAA,CADaG,CAAAA,EAAAA,CACbH,QAENK,EAAAA,GAAWE,CAAXF,CACHE,CADGF,CACMA,CADNA,CAEHG,CAAAA,CAAeJ,CAAfI,CAAyBF,CAAzBE,CATyB,CAA/B5B,CAN4C,CAmB9C4B,QAASA,EAAT,CAAwBN,CAAxB,CAA2BC,CAA3B,CAA8B,OAE1BD,EAAAA,OAEKO,GAFQN,CAAAA,OAERM,EAFoBP,CAAAA,MAAAA,CAAQ,CAARA,CAAY,EAAZA,CAAAA,MAAAA,CAAqB,SAACQ,EAAG/B,SAAM+B,KAAMP,CAAAA,CAAExB,CAAFwB,EAArCD,CAEpBO,CACHP,CAAAA,CAAEA,CAAAA,OAAFA,CAAa,CAAbA,CADGO,CACeN,CAAAA,CAAEA,CAAAA,OAAFA,CAAa,CAAbA,CADfM,CAEH,CANwB;AAS9B3B,QAASA,EAAT,CAAqB3C,CAArB,CAA2BwE,CAA3B,CAAgCxD,CAAhC,CAA+C,KACzCgC,EAAO,GACPyB,EACF,IADEA,CAEFzE,CAAAA,QAAAA,CACW,MADXA,CACmB,EADnBA,CAAAA,QAAAA,CAEW,MAFXA,CAEmB,EAFnBA,CAAAA,QAAAA,CAGW,SAHXA,CAGsB,EAHtBA,CAAAA,QAAAA,CAIW,qBAJXA,CAIkC,MAJlCA,CAAAA,QAAAA,CAKW,SALXA,CAKsB,SAAC0E,EAAGzF,EAAQ,CAC9B+D,CAAAA,KAAAA,CAAU/D,CAAV+D,QACO,WAFuB,CALlChD,CAFEyE,CAWF,GAEEzE,EAAAA,SAAAA,CAAc,GAAdA,GACEA,CAAAA,SAAAA,CAAc,IAAdA,CAKJyE,GAHEA,CAGFA,EAHa,MAGbA,EADAzB,CAAAA,KAAAA,CAAU,GAAVA,CACAyB,CAAAA,CAAAA,EAAW,QACFD,IACTC,GAAW,OAGTD,KAAKC,GAAW,WAKb,CAFO7B,IAAI+B,MAAJ/B,CAAW6B,CAAX7B,CADF5B,CAAAA,CAAgB4D,IAAAA,EAAhB5D,CAA4B,GAC1B4B,CAEP,CAAUI,CAAV,CA/BsC,CAkC/CC,QAASA,EAAT,CAAsBD,CAAtB,CAA4B6B,CAA5B,CAAoC,OAC3B7B,EAAAA,OAAAA,CAAY,SAAC5E,EAAQa,EAAK6D,EAAU,CAEzC1E,CAAAA,CAAOa,CAAPb,CAAAA,CAAcyG,CAAAA,CAAO/B,CAAP+B,QACPzG,EAHkC,CAApC4E,CAIJ,EAJIA,CAD2B,CAUlBf,QAAZA,EAAY,CAAA6C,CAAA,QAA0BA,EAAAA,KAAAA,CAAW,GAAXA,CADX9E,QAAAA,CAAa,QAAbA,CAAuB,GAAvBA;AAIjC+E,QAASA,EAAT,CAAyBC,CAAzB,CAAqCC,CAArC,CAAmD,KAC7CC,EAAyCD,CANXjF,QAAAA,CAAa,MAAbA,CAAqB,EAArBA,CACHA,QAAAA,CAAa,QAAbA,CAAuB,GAAvBA,CAEPmF,MAAAA,CAA6B,GAA7BA,CAISH,EANFhF,QAAAA,CAAa,QAAbA,CAAuB,GAAvBA,CAEPmF,MAAAA,CAA6B,GAA7BA,CAMxBC,QAAAA,CAAyB,SAAAxB,EAAW,CAClB,OAAZA,EAEoB,EAAlBsB,CAAAA,SAAqBA,CAAAA,IAAAA,GACJ,MAAZtB,GACTsB,CAAAA,KAAAA,CAActB,CAAdsB,CALgC,CAApCE,QASyB,EAAlBF,CAAAA,CAAAA,OAAAA,CAAsBjD,CAAAA,CAAUiD,CAAVjD,CAAtBiD,CAA4C,GAbF,CAmB5CrD,QAASA,EAAT,CAAyB1C,CAAzB,CAA6B8F,CAA7B,CAAiD,UAApBA,IAAAA,EAAe,IAAK,OAEtC,QAAd,GAAA,MAAO9F,EAAP,CAAyB+D,SAAAA,CAAU/D,CAAV+D,CAAzB,CAAyC/D,CAD3B6F,EAAAA,WADsC,eAC1BjH,EAAAA,YAAS,aAAIC,EAAAA,YAAO,WASzC,CAAEF,SANMkH,CAAAA,CACXA,CAAAA,WAAAA,CAAsB,GAAtBA,CAAAA,CACED,CAAAA,CAAgBC,CAAhBD,CAA4B,GAA5BA,CADFC,CAEED,CAAAA,CAAgBC,CAAhBD,CAA4BE,CAA5BF,CAHSC,CAIXC,CAEG,CAAYlH,OAAAA,CAAZ,CAAoBC,KAAAA,CAApB,CAV+C;AAgBjDuE,QAASA,EAAT,CAAsBzE,CAAtB,CAAgCM,CAAhC,CAA6C,UAAbA,IAAAA,EAAS,UACvCN,EAAAA,QAAAA,CACI,SADJA,CACe,SAAC4G,EAAGzF,SAAQb,EAAAA,CAAOa,CAAPb,OAAmBa,EAD9CnB,CAAAA,QAAAA,CAEI,KAFJA,CAEW,SAAAuH,SAASjH,EAAAA,CAAOiH,CAAPjH,GAAiBiH,EAFrCvH,CAD2C;kBA/Z7CwH,QAAA,CAAoBC,CAApB,CAA6BC,CAA7B,CAA0C,UAAbA,IAAAA,EAAO,CAAA,OACnC5H,EAAYD,KAAAA,WAAAA,CAAiBD,CAAjBC,SAGL,OAAXC,sCADFN,CAAAA,GAAAA,CAEE,6EAFFA,EAAAA,CAAAA,GAAAA,QAKAK,MAAAA,UAAAA,CAAgB,UAAM,IAChB6H,EAAM,KACJC,EAAU7H,CAAAA,MAAAA,CAAc,SAAAsC,EAAM,KAC5BwF,OACCxF,GACHyF,gBAAQ,CAKNF,CAAAA,EACAvF,EAAAA,MAAAA,EANM,GAUVqF,EAAAA,CAAQG,CAARH,CAbgC,CAApB3H,QAgBP6H,EAjBC,CADU,CAAtB9H,CAoBG,CAACC,CAAD,CAAU4H,CAAV,CAAgBD,CAAhB,CApBH5H,CAR+C;eAmC1CiI,QAAA,CAAiBzG,CAAjB,CAAqB,CACtB0G,CAAAA,CAAmB9D,CAAAA,CAAoB5C,CAApB4C,MACjBnE,EAAYD,KAAAA,WAAAA,CAAiBD,CAAjBC,SAGL,OAAXC,sCADFN,CAAAA,GAAAA,CAEE,yEAFFA,EAAAA,CAAAA,GAAAA,eAKOM,EAAAA,WAAAA,CAAmBiI,CAAnBjI,CATmB,uCA6BrBkI,QAAA,CAAkB3G,CAAlB,CAAsB,KACvBtB,EAAW8D,CAAAA,EACXkE,EAAAA,CAAmB9D,CAAAA,CAAoB5C,CAApB4C,QAEhBlE,EAAAA,YAAsBgI,CAAAA,SAJF,2DAqD7BE,QAAO,EAAqB,OACnBpI,MAAAA,WAAAA,CAAiBO,CAAjBP,CAAAA,OADmB;"}